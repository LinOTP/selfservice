image: node:10-stretch

variables:
  IMAGE_NAME: linotp/ng-selfservice
  COMMIT_SHA_TAG: $REGISTRY_URL/$IMAGE_NAME:$CI_COMMIT_SHA
  LATEST_TAG: $REGISTRY_URL/$IMAGE_NAME:latest


cache:
  untracked: true
  paths:
    - .yarn_cache
    - node_modules


stages:
  - test
  - build
  - deploy

before_script:
  - yarn config set cache-folder $PWD/.yarn_cache
  - yarn install --pure-lockfile


### Run before merge ###

typescript lint:
  stage: test
  script:
    - yarn lint

unit tests:
  stage: test
  image: docker.repos.corp.keyidentity.com/gitlab-images/node-chrome:10-stretch
  script:
    - yarn test:ci-no-sandbox
  coverage: /Branches\s+:\s+\d+\.?\d*%/

build dist:
  stage: build
  script:
    - yarn build
  artifacts:
    expire_in: 1 week
    paths:
      - dist/

build deb:
  stage: build
  image: debian:stretch
  when: manual
  before_script:
    - echo 'skip yarn install'
  script:
    - apt-get update
    - apt-get install --no-install-recommends --yes apt-transport-https gnupg curl devscripts ca-certificates equivs
    - curl -sS https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -
    - echo 'deb https://deb.nodesource.com/node_10.x stretch main' > /etc/apt/sources.list.d/nodesource.list
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    - echo 'deb https://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list
    - apt-get update
    - mk-build-deps --install --remove --tool "apt-get --no-install-recommends --yes"
    - debuild -us -uc -b
    - mkdir -p artifacts
    - mv ../*.build* ../*.changes ../*.deb artifacts/
  artifacts:
    expire_in: 1 week
    paths:
      - artifacts/

build docker image:
  stage: build
  image: docker:latest
  tags:
    - multi-stage
  before_script:
    - echo 'skip yarn install'
  script:
    - docker build -t $LATEST_TAG .
    - docker rmi $LATEST_TAG

### Run only on master ###

publish docker image:
  stage: deploy
  image: docker:latest
  only:
    - master
  tags:
    - multi-stage
  before_script:
    - echo 'skip yarn install'
  script:
    - docker login -u $REGISTRY_USERNAME -p $REGISTRY_PASSWORD $REGISTRY_URL
    - docker build -t $LATEST_TAG .
    - docker push $LATEST_TAG


### Run only manually ###

publish tagged image:
  stage: deploy
  when: manual
  image: docker:latest
  tags:
    - multi-stage
  before_script:
    - echo 'skip yarn install'
  script:
    - docker login -u $REGISTRY_USERNAME -p $REGISTRY_PASSWORD $REGISTRY_URL
    - docker build -t $COMMIT_SHA_TAG .
    - docker push $COMMIT_SHA_TAG
